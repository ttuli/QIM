// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: IM_login.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchRequest_SearchType int32

const (
	SearchRequest_FRIEND SearchRequest_SearchType = 0
	SearchRequest_GROUP  SearchRequest_SearchType = 1
)

// Enum value maps for SearchRequest_SearchType.
var (
	SearchRequest_SearchType_name = map[int32]string{
		0: "FRIEND",
		1: "GROUP",
	}
	SearchRequest_SearchType_value = map[string]int32{
		"FRIEND": 0,
		"GROUP":  1,
	}
)

func (x SearchRequest_SearchType) Enum() *SearchRequest_SearchType {
	p := new(SearchRequest_SearchType)
	*p = x
	return p
}

func (x SearchRequest_SearchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchRequest_SearchType) Descriptor() protoreflect.EnumDescriptor {
	return file_IM_login_proto_enumTypes[0].Descriptor()
}

func (SearchRequest_SearchType) Type() protoreflect.EnumType {
	return &file_IM_login_proto_enumTypes[0]
}

func (x SearchRequest_SearchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchRequest_SearchType.Descriptor instead.
func (SearchRequest_SearchType) EnumDescriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{3, 0}
}

type SearchRequest_SearchMode int32

const (
	SearchRequest_ACCOUNT SearchRequest_SearchMode = 0
	SearchRequest_NAME    SearchRequest_SearchMode = 1
)

// Enum value maps for SearchRequest_SearchMode.
var (
	SearchRequest_SearchMode_name = map[int32]string{
		0: "ACCOUNT",
		1: "NAME",
	}
	SearchRequest_SearchMode_value = map[string]int32{
		"ACCOUNT": 0,
		"NAME":    1,
	}
)

func (x SearchRequest_SearchMode) Enum() *SearchRequest_SearchMode {
	p := new(SearchRequest_SearchMode)
	*p = x
	return p
}

func (x SearchRequest_SearchMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchRequest_SearchMode) Descriptor() protoreflect.EnumDescriptor {
	return file_IM_login_proto_enumTypes[1].Descriptor()
}

func (SearchRequest_SearchMode) Type() protoreflect.EnumType {
	return &file_IM_login_proto_enumTypes[1]
}

func (x SearchRequest_SearchMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchRequest_SearchMode.Descriptor instead.
func (SearchRequest_SearchMode) EnumDescriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{3, 1}
}

type VerifyRequest_VerifyType int32

const (
	VerifyRequest_FRIEND VerifyRequest_VerifyType = 0
	VerifyRequest_GROUP  VerifyRequest_VerifyType = 1
)

// Enum value maps for VerifyRequest_VerifyType.
var (
	VerifyRequest_VerifyType_name = map[int32]string{
		0: "FRIEND",
		1: "GROUP",
	}
	VerifyRequest_VerifyType_value = map[string]int32{
		"FRIEND": 0,
		"GROUP":  1,
	}
)

func (x VerifyRequest_VerifyType) Enum() *VerifyRequest_VerifyType {
	p := new(VerifyRequest_VerifyType)
	*p = x
	return p
}

func (x VerifyRequest_VerifyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerifyRequest_VerifyType) Descriptor() protoreflect.EnumDescriptor {
	return file_IM_login_proto_enumTypes[2].Descriptor()
}

func (VerifyRequest_VerifyType) Type() protoreflect.EnumType {
	return &file_IM_login_proto_enumTypes[2]
}

func (x VerifyRequest_VerifyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerifyRequest_VerifyType.Descriptor instead.
func (VerifyRequest_VerifyType) EnumDescriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{6, 0}
}

type MessageRequestMsgType int32

const (
	MessageRequest_Text  MessageRequestMsgType = 0
	MessageRequest_Image MessageRequestMsgType = 1
	MessageRequest_File  MessageRequestMsgType = 2
)

// Enum value maps for MessageRequestMsgType.
var (
	MessageRequestMsgType_name = map[int32]string{
		0: "Text",
		1: "Image",
		2: "File",
	}
	MessageRequestMsgType_value = map[string]int32{
		"Text":  0,
		"Image": 1,
		"File":  2,
	}
)

func (x MessageRequestMsgType) Enum() *MessageRequestMsgType {
	p := new(MessageRequestMsgType)
	*p = x
	return p
}

func (x MessageRequestMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageRequestMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_IM_login_proto_enumTypes[3].Descriptor()
}

func (MessageRequestMsgType) Type() protoreflect.EnumType {
	return &file_IM_login_proto_enumTypes[3]
}

func (x MessageRequestMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageRequestMsgType.Descriptor instead.
func (MessageRequestMsgType) EnumDescriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{11, 0}
}

type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_IM_login_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_IM_login_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UserInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfoRequest) Reset() {
	*x = UserInfoRequest{}
	mi := &file_IM_login_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRequest) ProtoMessage() {}

func (x *UserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRequest.ProtoReflect.Descriptor instead.
func (*UserInfoRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{2}
}

func (x *UserInfoRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type SearchRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Type          SearchRequest_SearchType `protobuf:"varint,1,opt,name=type,proto3,enum=SearchRequest_SearchType" json:"type,omitempty"`
	Mode          SearchRequest_SearchMode `protobuf:"varint,2,opt,name=mode,proto3,enum=SearchRequest_SearchMode" json:"mode,omitempty"`
	Content       string                   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Offset        int32                    `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_IM_login_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{3}
}

func (x *SearchRequest) GetType() SearchRequest_SearchType {
	if x != nil {
		return x.Type
	}
	return SearchRequest_FRIEND
}

func (x *SearchRequest) GetMode() SearchRequest_SearchMode {
	if x != nil {
		return x.Mode
	}
	return SearchRequest_ACCOUNT
}

func (x *SearchRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SearchRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type AddRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	UserId              string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId            string                 `protobuf:"bytes,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	VerificationMessage string                 `protobuf:"bytes,3,opt,name=verification_message,json=verificationMessage,proto3" json:"verification_message,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AddRequest) Reset() {
	*x = AddRequest{}
	mi := &file_IM_login_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRequest) ProtoMessage() {}

func (x *AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRequest.ProtoReflect.Descriptor instead.
func (*AddRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{4}
}

func (x *AddRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *AddRequest) GetVerificationMessage() string {
	if x != nil {
		return x.VerificationMessage
	}
	return ""
}

type ModifyInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Sex           int32                  `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyInfoRequest) Reset() {
	*x = ModifyInfoRequest{}
	mi := &file_IM_login_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyInfoRequest) ProtoMessage() {}

func (x *ModifyInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyInfoRequest.ProtoReflect.Descriptor instead.
func (*ModifyInfoRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{5}
}

func (x *ModifyInfoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ModifyInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModifyInfoRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ModifyInfoRequest) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

type VerifyRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	UserId        string                   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type          int32                    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Vtype         VerifyRequest_VerifyType `protobuf:"varint,3,opt,name=vtype,proto3,enum=VerifyRequest_VerifyType" json:"vtype,omitempty"`
	UserInfo      *UserInfoRespond         `protobuf:"bytes,4,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	mi := &file_IM_login_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{6}
}

func (x *VerifyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VerifyRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *VerifyRequest) GetVtype() VerifyRequest_VerifyType {
	if x != nil {
		return x.Vtype
	}
	return VerifyRequest_FRIEND
}

func (x *VerifyRequest) GetUserInfo() *UserInfoRespond {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type UpdataImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	DataHD        []byte                 `protobuf:"bytes,3,opt,name=dataHD,proto3" json:"dataHD,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdataImageRequest) Reset() {
	*x = UpdataImageRequest{}
	mi := &file_IM_login_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdataImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdataImageRequest) ProtoMessage() {}

func (x *UpdataImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdataImageRequest.ProtoReflect.Descriptor instead.
func (*UpdataImageRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{7}
}

func (x *UpdataImageRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdataImageRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdataImageRequest) GetDataHD() []byte {
	if x != nil {
		return x.DataHD
	}
	return nil
}

type ImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageRequest) Reset() {
	*x = ImageRequest{}
	mi := &file_IM_login_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageRequest) ProtoMessage() {}

func (x *ImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageRequest.ProtoReflect.Descriptor instead.
func (*ImageRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{8}
}

func (x *ImageRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type FriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendRequest) Reset() {
	*x = FriendRequest{}
	mi := &file_IM_login_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequest) ProtoMessage() {}

func (x *FriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequest.ProtoReflect.Descriptor instead.
func (*FriendRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{9}
}

func (x *FriendRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteFriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Target        string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFriendRequest) Reset() {
	*x = DeleteFriendRequest{}
	mi := &file_IM_login_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequest) ProtoMessage() {}

func (x *DeleteFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteFriendRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteFriendRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type MessageRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Target string                 `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Type   MessageRequestMsgType  `protobuf:"varint,2,opt,name=type,proto3,enum=MessageRequestMsgType" json:"type,omitempty"`
	// Types that are valid to be assigned to RequestType:
	//
	//	*MessageRequest_TextMessage
	//	*MessageRequest_ImageMessage
	RequestType   isMessageRequest_RequestType `protobuf_oneof:"request_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageRequest) Reset() {
	*x = MessageRequest{}
	mi := &file_IM_login_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRequest) ProtoMessage() {}

func (x *MessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRequest.ProtoReflect.Descriptor instead.
func (*MessageRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{11}
}

func (x *MessageRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *MessageRequest) GetType() MessageRequestMsgType {
	if x != nil {
		return x.Type
	}
	return MessageRequest_Text
}

func (x *MessageRequest) GetRequestType() isMessageRequest_RequestType {
	if x != nil {
		return x.RequestType
	}
	return nil
}

func (x *MessageRequest) GetTextMessage() *TextMessage {
	if x != nil {
		if x, ok := x.RequestType.(*MessageRequest_TextMessage); ok {
			return x.TextMessage
		}
	}
	return nil
}

func (x *MessageRequest) GetImageMessage() *ImageMessage {
	if x != nil {
		if x, ok := x.RequestType.(*MessageRequest_ImageMessage); ok {
			return x.ImageMessage
		}
	}
	return nil
}

type isMessageRequest_RequestType interface {
	isMessageRequest_RequestType()
}

type MessageRequest_TextMessage struct {
	TextMessage *TextMessage `protobuf:"bytes,3,opt,name=text_message,json=textMessage,proto3,oneof"`
}

type MessageRequest_ImageMessage struct {
	ImageMessage *ImageMessage `protobuf:"bytes,4,opt,name=image_message,json=imageMessage,proto3,oneof"`
}

func (*MessageRequest_TextMessage) isMessageRequest_RequestType() {}

func (*MessageRequest_ImageMessage) isMessageRequest_RequestType() {}

type TextMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Mention       []byte                 `protobuf:"bytes,2,opt,name=mention,proto3" json:"mention,omitempty"` //引用消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextMessage) Reset() {
	*x = TextMessage{}
	mi := &file_IM_login_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMessage) ProtoMessage() {}

func (x *TextMessage) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMessage.ProtoReflect.Descriptor instead.
func (*TextMessage) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{12}
}

func (x *TextMessage) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *TextMessage) GetMention() []byte {
	if x != nil {
		return x.Mention
	}
	return nil
}

type ImageMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Md5           string                 `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	DataHD        []byte                 `protobuf:"bytes,3,opt,name=dataHD,proto3" json:"dataHD,omitempty"`
	Content       []byte                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageMessage) Reset() {
	*x = ImageMessage{}
	mi := &file_IM_login_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMessage) ProtoMessage() {}

func (x *ImageMessage) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMessage.ProtoReflect.Descriptor instead.
func (*ImageMessage) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{13}
}

func (x *ImageMessage) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *ImageMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ImageMessage) GetDataHD() []byte {
	if x != nil {
		return x.DataHD
	}
	return nil
}

func (x *ImageMessage) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type PullRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RequestType:
	//
	//	*PullRequest_LoginRequest
	//	*PullRequest_RegisterRequest
	//	*PullRequest_UserInfo
	//	*PullRequest_SearchRequest
	//	*PullRequest_AddRequest
	//	*PullRequest_ModifyRequest
	//	*PullRequest_VerifyRequest
	//	*PullRequest_UpdateImage
	//	*PullRequest_ImageRequest
	//	*PullRequest_FriendRequest
	//	*PullRequest_DeleteRequest
	//	*PullRequest_MessageRequest
	RequestType   isPullRequest_RequestType `protobuf_oneof:"request_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullRequest) Reset() {
	*x = PullRequest{}
	mi := &file_IM_login_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequest) ProtoMessage() {}

func (x *PullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequest.ProtoReflect.Descriptor instead.
func (*PullRequest) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{14}
}

func (x *PullRequest) GetRequestType() isPullRequest_RequestType {
	if x != nil {
		return x.RequestType
	}
	return nil
}

func (x *PullRequest) GetLoginRequest() *LoginRequest {
	if x != nil {
		if x, ok := x.RequestType.(*PullRequest_LoginRequest); ok {
			return x.LoginRequest
		}
	}
	return nil
}

func (x *PullRequest) GetRegisterRequest() *RegisterRequest {
	if x != nil {
		if x, ok := x.RequestType.(*PullRequest_RegisterRequest); ok {
			return x.RegisterRequest
		}
	}
	return nil
}

func (x *PullRequest) GetUserInfo() *UserInfoRequest {
	if x != nil {
		if x, ok := x.RequestType.(*PullRequest_UserInfo); ok {
			return x.UserInfo
		}
	}
	return nil
}

func (x *PullRequest) GetSearchRequest() *SearchRequest {
	if x != nil {
		if x, ok := x.RequestType.(*PullRequest_SearchRequest); ok {
			return x.SearchRequest
		}
	}
	return nil
}

func (x *PullRequest) GetAddRequest() *AddRequest {
	if x != nil {
		if x, ok := x.RequestType.(*PullRequest_AddRequest); ok {
			return x.AddRequest
		}
	}
	return nil
}

func (x *PullRequest) GetModifyRequest() *ModifyInfoRequest {
	if x != nil {
		if x, ok := x.RequestType.(*PullRequest_ModifyRequest); ok {
			return x.ModifyRequest
		}
	}
	return nil
}

func (x *PullRequest) GetVerifyRequest() *VerifyRequest {
	if x != nil {
		if x, ok := x.RequestType.(*PullRequest_VerifyRequest); ok {
			return x.VerifyRequest
		}
	}
	return nil
}

func (x *PullRequest) GetUpdateImage() *UpdataImageRequest {
	if x != nil {
		if x, ok := x.RequestType.(*PullRequest_UpdateImage); ok {
			return x.UpdateImage
		}
	}
	return nil
}

func (x *PullRequest) GetImageRequest() *ImageRequest {
	if x != nil {
		if x, ok := x.RequestType.(*PullRequest_ImageRequest); ok {
			return x.ImageRequest
		}
	}
	return nil
}

func (x *PullRequest) GetFriendRequest() *FriendRequest {
	if x != nil {
		if x, ok := x.RequestType.(*PullRequest_FriendRequest); ok {
			return x.FriendRequest
		}
	}
	return nil
}

func (x *PullRequest) GetDeleteRequest() *DeleteFriendRequest {
	if x != nil {
		if x, ok := x.RequestType.(*PullRequest_DeleteRequest); ok {
			return x.DeleteRequest
		}
	}
	return nil
}

func (x *PullRequest) GetMessageRequest() *MessageRequest {
	if x != nil {
		if x, ok := x.RequestType.(*PullRequest_MessageRequest); ok {
			return x.MessageRequest
		}
	}
	return nil
}

type isPullRequest_RequestType interface {
	isPullRequest_RequestType()
}

type PullRequest_LoginRequest struct {
	LoginRequest *LoginRequest `protobuf:"bytes,1,opt,name=login_request,json=loginRequest,proto3,oneof"`
}

type PullRequest_RegisterRequest struct {
	RegisterRequest *RegisterRequest `protobuf:"bytes,2,opt,name=register_request,json=registerRequest,proto3,oneof"`
}

type PullRequest_UserInfo struct {
	UserInfo *UserInfoRequest `protobuf:"bytes,3,opt,name=user_info,json=userInfo,proto3,oneof"`
}

type PullRequest_SearchRequest struct {
	SearchRequest *SearchRequest `protobuf:"bytes,4,opt,name=search_request,json=searchRequest,proto3,oneof"`
}

type PullRequest_AddRequest struct {
	AddRequest *AddRequest `protobuf:"bytes,5,opt,name=add_request,json=addRequest,proto3,oneof"`
}

type PullRequest_ModifyRequest struct {
	ModifyRequest *ModifyInfoRequest `protobuf:"bytes,6,opt,name=modify_request,json=modifyRequest,proto3,oneof"`
}

type PullRequest_VerifyRequest struct {
	VerifyRequest *VerifyRequest `protobuf:"bytes,7,opt,name=verify_request,json=verifyRequest,proto3,oneof"`
}

type PullRequest_UpdateImage struct {
	UpdateImage *UpdataImageRequest `protobuf:"bytes,8,opt,name=update_image,json=updateImage,proto3,oneof"`
}

type PullRequest_ImageRequest struct {
	ImageRequest *ImageRequest `protobuf:"bytes,9,opt,name=image_request,json=imageRequest,proto3,oneof"`
}

type PullRequest_FriendRequest struct {
	FriendRequest *FriendRequest `protobuf:"bytes,10,opt,name=friend_request,json=friendRequest,proto3,oneof"`
}

type PullRequest_DeleteRequest struct {
	DeleteRequest *DeleteFriendRequest `protobuf:"bytes,11,opt,name=delete_request,json=deleteRequest,proto3,oneof"`
}

type PullRequest_MessageRequest struct {
	MessageRequest *MessageRequest `protobuf:"bytes,12,opt,name=message_request,json=messageRequest,proto3,oneof"`
}

func (*PullRequest_LoginRequest) isPullRequest_RequestType() {}

func (*PullRequest_RegisterRequest) isPullRequest_RequestType() {}

func (*PullRequest_UserInfo) isPullRequest_RequestType() {}

func (*PullRequest_SearchRequest) isPullRequest_RequestType() {}

func (*PullRequest_AddRequest) isPullRequest_RequestType() {}

func (*PullRequest_ModifyRequest) isPullRequest_RequestType() {}

func (*PullRequest_VerifyRequest) isPullRequest_RequestType() {}

func (*PullRequest_UpdateImage) isPullRequest_RequestType() {}

func (*PullRequest_ImageRequest) isPullRequest_RequestType() {}

func (*PullRequest_FriendRequest) isPullRequest_RequestType() {}

func (*PullRequest_DeleteRequest) isPullRequest_RequestType() {}

func (*PullRequest_MessageRequest) isPullRequest_RequestType() {}

type SimpleRespond struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleRespond) Reset() {
	*x = SimpleRespond{}
	mi := &file_IM_login_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleRespond) ProtoMessage() {}

func (x *SimpleRespond) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleRespond.ProtoReflect.Descriptor instead.
func (*SimpleRespond) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{15}
}

func (x *SimpleRespond) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SimpleRespond) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UserInfoRespond struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Createtime    string                 `protobuf:"bytes,4,opt,name=createtime,proto3" json:"createtime,omitempty"`
	Sex           bool                   `protobuf:"varint,5,opt,name=sex,proto3" json:"sex,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfoRespond) Reset() {
	*x = UserInfoRespond{}
	mi := &file_IM_login_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfoRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRespond) ProtoMessage() {}

func (x *UserInfoRespond) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRespond.ProtoReflect.Descriptor instead.
func (*UserInfoRespond) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{16}
}

func (x *UserInfoRespond) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserInfoRespond) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInfoRespond) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfoRespond) GetCreatetime() string {
	if x != nil {
		return x.Createtime
	}
	return ""
}

func (x *UserInfoRespond) GetSex() bool {
	if x != nil {
		return x.Sex
	}
	return false
}

type SearchRespond struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          []*UserInfoRespond     `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRespond) Reset() {
	*x = SearchRespond{}
	mi := &file_IM_login_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRespond) ProtoMessage() {}

func (x *SearchRespond) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRespond.ProtoReflect.Descriptor instead.
func (*SearchRespond) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{17}
}

func (x *SearchRespond) GetInfo() []*UserInfoRespond {
	if x != nil {
		return x.Info
	}
	return nil
}

type ImageRespond struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageRespond) Reset() {
	*x = ImageRespond{}
	mi := &file_IM_login_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageRespond) ProtoMessage() {}

func (x *ImageRespond) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageRespond.ProtoReflect.Descriptor instead.
func (*ImageRespond) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{18}
}

func (x *ImageRespond) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type FriendRespond struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Infos         []*UserInfoRespond     `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendRespond) Reset() {
	*x = FriendRespond{}
	mi := &file_IM_login_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRespond) ProtoMessage() {}

func (x *FriendRespond) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRespond.ProtoReflect.Descriptor instead.
func (*FriendRespond) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{19}
}

func (x *FriendRespond) GetInfos() []*UserInfoRespond {
	if x != nil {
		return x.Infos
	}
	return nil
}

type PullRespond struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RequestType:
	//
	//	*PullRespond_SimpleRespond
	//	*PullRespond_UserInfo
	//	*PullRespond_SearchRespond
	//	*PullRespond_ServerPush
	//	*PullRespond_ImageRespond
	//	*PullRespond_FriendRespond
	RequestType   isPullRespond_RequestType `protobuf_oneof:"request_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullRespond) Reset() {
	*x = PullRespond{}
	mi := &file_IM_login_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRespond) ProtoMessage() {}

func (x *PullRespond) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRespond.ProtoReflect.Descriptor instead.
func (*PullRespond) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{20}
}

func (x *PullRespond) GetRequestType() isPullRespond_RequestType {
	if x != nil {
		return x.RequestType
	}
	return nil
}

func (x *PullRespond) GetSimpleRespond() *SimpleRespond {
	if x != nil {
		if x, ok := x.RequestType.(*PullRespond_SimpleRespond); ok {
			return x.SimpleRespond
		}
	}
	return nil
}

func (x *PullRespond) GetUserInfo() *UserInfoRespond {
	if x != nil {
		if x, ok := x.RequestType.(*PullRespond_UserInfo); ok {
			return x.UserInfo
		}
	}
	return nil
}

func (x *PullRespond) GetSearchRespond() *SearchRespond {
	if x != nil {
		if x, ok := x.RequestType.(*PullRespond_SearchRespond); ok {
			return x.SearchRespond
		}
	}
	return nil
}

func (x *PullRespond) GetServerPush() *ServerPush {
	if x != nil {
		if x, ok := x.RequestType.(*PullRespond_ServerPush); ok {
			return x.ServerPush
		}
	}
	return nil
}

func (x *PullRespond) GetImageRespond() *ImageRespond {
	if x != nil {
		if x, ok := x.RequestType.(*PullRespond_ImageRespond); ok {
			return x.ImageRespond
		}
	}
	return nil
}

func (x *PullRespond) GetFriendRespond() *FriendRespond {
	if x != nil {
		if x, ok := x.RequestType.(*PullRespond_FriendRespond); ok {
			return x.FriendRespond
		}
	}
	return nil
}

type isPullRespond_RequestType interface {
	isPullRespond_RequestType()
}

type PullRespond_SimpleRespond struct {
	SimpleRespond *SimpleRespond `protobuf:"bytes,1,opt,name=simple_respond,json=simpleRespond,proto3,oneof"`
}

type PullRespond_UserInfo struct {
	UserInfo *UserInfoRespond `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3,oneof"`
}

type PullRespond_SearchRespond struct {
	SearchRespond *SearchRespond `protobuf:"bytes,3,opt,name=search_respond,json=searchRespond,proto3,oneof"`
}

type PullRespond_ServerPush struct {
	ServerPush *ServerPush `protobuf:"bytes,4,opt,name=server_push,json=serverPush,proto3,oneof"`
}

type PullRespond_ImageRespond struct {
	ImageRespond *ImageRespond `protobuf:"bytes,6,opt,name=image_respond,json=imageRespond,proto3,oneof"`
}

type PullRespond_FriendRespond struct {
	FriendRespond *FriendRespond `protobuf:"bytes,7,opt,name=friend_respond,json=friendRespond,proto3,oneof"`
}

func (*PullRespond_SimpleRespond) isPullRespond_RequestType() {}

func (*PullRespond_UserInfo) isPullRespond_RequestType() {}

func (*PullRespond_SearchRespond) isPullRespond_RequestType() {}

func (*PullRespond_ServerPush) isPullRespond_RequestType() {}

func (*PullRespond_ImageRespond) isPullRespond_RequestType() {}

func (*PullRespond_FriendRespond) isPullRespond_RequestType() {}

type ServerPush struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RequestType:
	//
	//	*ServerPush_AddRequest
	//	*ServerPush_VerifyRequest
	//	*ServerPush_MessageRequest
	//	*ServerPush_DeleteRequest
	RequestType   isServerPush_RequestType `protobuf_oneof:"request_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerPush) Reset() {
	*x = ServerPush{}
	mi := &file_IM_login_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerPush) ProtoMessage() {}

func (x *ServerPush) ProtoReflect() protoreflect.Message {
	mi := &file_IM_login_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerPush.ProtoReflect.Descriptor instead.
func (*ServerPush) Descriptor() ([]byte, []int) {
	return file_IM_login_proto_rawDescGZIP(), []int{21}
}

func (x *ServerPush) GetRequestType() isServerPush_RequestType {
	if x != nil {
		return x.RequestType
	}
	return nil
}

func (x *ServerPush) GetAddRequest() *AddRequest {
	if x != nil {
		if x, ok := x.RequestType.(*ServerPush_AddRequest); ok {
			return x.AddRequest
		}
	}
	return nil
}

func (x *ServerPush) GetVerifyRequest() *VerifyRequest {
	if x != nil {
		if x, ok := x.RequestType.(*ServerPush_VerifyRequest); ok {
			return x.VerifyRequest
		}
	}
	return nil
}

func (x *ServerPush) GetMessageRequest() *MessageRequest {
	if x != nil {
		if x, ok := x.RequestType.(*ServerPush_MessageRequest); ok {
			return x.MessageRequest
		}
	}
	return nil
}

func (x *ServerPush) GetDeleteRequest() *DeleteFriendRequest {
	if x != nil {
		if x, ok := x.RequestType.(*ServerPush_DeleteRequest); ok {
			return x.DeleteRequest
		}
	}
	return nil
}

type isServerPush_RequestType interface {
	isServerPush_RequestType()
}

type ServerPush_AddRequest struct {
	AddRequest *AddRequest `protobuf:"bytes,1,opt,name=add_request,json=addRequest,proto3,oneof"`
}

type ServerPush_VerifyRequest struct {
	VerifyRequest *VerifyRequest `protobuf:"bytes,2,opt,name=verify_request,json=verifyRequest,proto3,oneof"`
}

type ServerPush_MessageRequest struct {
	MessageRequest *MessageRequest `protobuf:"bytes,3,opt,name=message_request,json=messageRequest,proto3,oneof"`
}

type ServerPush_DeleteRequest struct {
	DeleteRequest *DeleteFriendRequest `protobuf:"bytes,4,opt,name=delete_request,json=deleteRequest,proto3,oneof"`
}

func (*ServerPush_AddRequest) isServerPush_RequestType() {}

func (*ServerPush_VerifyRequest) isServerPush_RequestType() {}

func (*ServerPush_MessageRequest) isServerPush_RequestType() {}

func (*ServerPush_DeleteRequest) isServerPush_RequestType() {}

var File_IM_login_proto protoreflect.FileDescriptor

var file_IM_login_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x49, 0x4d, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x44, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x5f, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x2b, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x23, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x01, 0x22, 0x23, 0x0a, 0x0a, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01,
	0x22, 0x75, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x22, 0xc1, 0x01, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2f, 0x0a, 0x05, 0x76, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x2d, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x23, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x10, 0x01, 0x22, 0x52, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x48, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x48, 0x44, 0x22, 0x20, 0x0a, 0x0c, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x28, 0x0a, 0x0d, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xf8, 0x01,
	0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x65, 0x78,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x28,
	0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x65, 0x78,
	0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x02, 0x42, 0x0e, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x0c, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x64, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x48, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x48, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0xc6, 0x05, 0x0a, 0x0b, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x10, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3a, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0e, 0x0a, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3b, 0x0a, 0x0d,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x65, 0x78, 0x22, 0x35, 0x0a, 0x0d, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x22, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0xdf, 0x02, 0x0a, 0x0b, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12,
	0x37, 0x0a, 0x0e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x50, 0x75, 0x73, 0x68, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x75,
	0x73, 0x68, 0x12, 0x34, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x0e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x48, 0x00, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x80, 0x02, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x75, 0x73, 0x68,
	0x12, 0x2e, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_IM_login_proto_rawDescOnce sync.Once
	file_IM_login_proto_rawDescData []byte
)

func file_IM_login_proto_rawDescGZIP() []byte {
	file_IM_login_proto_rawDescOnce.Do(func() {
		file_IM_login_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_IM_login_proto_rawDesc), len(file_IM_login_proto_rawDesc)))
	})
	return file_IM_login_proto_rawDescData
}

var file_IM_login_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_IM_login_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_IM_login_proto_goTypes = []any{
	(SearchRequest_SearchType)(0), // 0: SearchRequest.SearchType
	(SearchRequest_SearchMode)(0), // 1: SearchRequest.SearchMode
	(VerifyRequest_VerifyType)(0), // 2: VerifyRequest.VerifyType
	(MessageRequestMsgType)(0),    // 3: MessageRequest.msgType
	(*LoginRequest)(nil),          // 4: LoginRequest
	(*RegisterRequest)(nil),       // 5: RegisterRequest
	(*UserInfoRequest)(nil),       // 6: UserInfoRequest
	(*SearchRequest)(nil),         // 7: SearchRequest
	(*AddRequest)(nil),            // 8: AddRequest
	(*ModifyInfoRequest)(nil),     // 9: ModifyInfoRequest
	(*VerifyRequest)(nil),         // 10: VerifyRequest
	(*UpdataImageRequest)(nil),    // 11: UpdataImageRequest
	(*ImageRequest)(nil),          // 12: ImageRequest
	(*FriendRequest)(nil),         // 13: FriendRequest
	(*DeleteFriendRequest)(nil),   // 14: DeleteFriendRequest
	(*MessageRequest)(nil),        // 15: MessageRequest
	(*TextMessage)(nil),           // 16: TextMessage
	(*ImageMessage)(nil),          // 17: ImageMessage
	(*PullRequest)(nil),           // 18: PullRequest
	(*SimpleRespond)(nil),         // 19: SimpleRespond
	(*UserInfoRespond)(nil),       // 20: UserInfoRespond
	(*SearchRespond)(nil),         // 21: SearchRespond
	(*ImageRespond)(nil),          // 22: ImageRespond
	(*FriendRespond)(nil),         // 23: FriendRespond
	(*PullRespond)(nil),           // 24: PullRespond
	(*ServerPush)(nil),            // 25: ServerPush
}
var file_IM_login_proto_depIdxs = []int32{
	0,  // 0: SearchRequest.type:type_name -> SearchRequest.SearchType
	1,  // 1: SearchRequest.mode:type_name -> SearchRequest.SearchMode
	2,  // 2: VerifyRequest.vtype:type_name -> VerifyRequest.VerifyType
	20, // 3: VerifyRequest.user_info:type_name -> UserInfoRespond
	3,  // 4: MessageRequest.type:type_name -> MessageRequest.msgType
	16, // 5: MessageRequest.text_message:type_name -> TextMessage
	17, // 6: MessageRequest.image_message:type_name -> ImageMessage
	4,  // 7: PullRequest.login_request:type_name -> LoginRequest
	5,  // 8: PullRequest.register_request:type_name -> RegisterRequest
	6,  // 9: PullRequest.user_info:type_name -> UserInfoRequest
	7,  // 10: PullRequest.search_request:type_name -> SearchRequest
	8,  // 11: PullRequest.add_request:type_name -> AddRequest
	9,  // 12: PullRequest.modify_request:type_name -> ModifyInfoRequest
	10, // 13: PullRequest.verify_request:type_name -> VerifyRequest
	11, // 14: PullRequest.update_image:type_name -> UpdataImageRequest
	12, // 15: PullRequest.image_request:type_name -> ImageRequest
	13, // 16: PullRequest.friend_request:type_name -> FriendRequest
	14, // 17: PullRequest.delete_request:type_name -> DeleteFriendRequest
	15, // 18: PullRequest.message_request:type_name -> MessageRequest
	20, // 19: SearchRespond.info:type_name -> UserInfoRespond
	20, // 20: FriendRespond.infos:type_name -> UserInfoRespond
	19, // 21: PullRespond.simple_respond:type_name -> SimpleRespond
	20, // 22: PullRespond.user_info:type_name -> UserInfoRespond
	21, // 23: PullRespond.search_respond:type_name -> SearchRespond
	25, // 24: PullRespond.server_push:type_name -> ServerPush
	22, // 25: PullRespond.image_respond:type_name -> ImageRespond
	23, // 26: PullRespond.friend_respond:type_name -> FriendRespond
	8,  // 27: ServerPush.add_request:type_name -> AddRequest
	10, // 28: ServerPush.verify_request:type_name -> VerifyRequest
	15, // 29: ServerPush.message_request:type_name -> MessageRequest
	14, // 30: ServerPush.delete_request:type_name -> DeleteFriendRequest
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_IM_login_proto_init() }
func file_IM_login_proto_init() {
	if File_IM_login_proto != nil {
		return
	}
	file_IM_login_proto_msgTypes[11].OneofWrappers = []any{
		(*MessageRequest_TextMessage)(nil),
		(*MessageRequest_ImageMessage)(nil),
	}
	file_IM_login_proto_msgTypes[14].OneofWrappers = []any{
		(*PullRequest_LoginRequest)(nil),
		(*PullRequest_RegisterRequest)(nil),
		(*PullRequest_UserInfo)(nil),
		(*PullRequest_SearchRequest)(nil),
		(*PullRequest_AddRequest)(nil),
		(*PullRequest_ModifyRequest)(nil),
		(*PullRequest_VerifyRequest)(nil),
		(*PullRequest_UpdateImage)(nil),
		(*PullRequest_ImageRequest)(nil),
		(*PullRequest_FriendRequest)(nil),
		(*PullRequest_DeleteRequest)(nil),
		(*PullRequest_MessageRequest)(nil),
	}
	file_IM_login_proto_msgTypes[20].OneofWrappers = []any{
		(*PullRespond_SimpleRespond)(nil),
		(*PullRespond_UserInfo)(nil),
		(*PullRespond_SearchRespond)(nil),
		(*PullRespond_ServerPush)(nil),
		(*PullRespond_ImageRespond)(nil),
		(*PullRespond_FriendRespond)(nil),
	}
	file_IM_login_proto_msgTypes[21].OneofWrappers = []any{
		(*ServerPush_AddRequest)(nil),
		(*ServerPush_VerifyRequest)(nil),
		(*ServerPush_MessageRequest)(nil),
		(*ServerPush_DeleteRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_IM_login_proto_rawDesc), len(file_IM_login_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_IM_login_proto_goTypes,
		DependencyIndexes: file_IM_login_proto_depIdxs,
		EnumInfos:         file_IM_login_proto_enumTypes,
		MessageInfos:      file_IM_login_proto_msgTypes,
	}.Build()
	File_IM_login_proto = out.File
	file_IM_login_proto_goTypes = nil
	file_IM_login_proto_depIdxs = nil
}
