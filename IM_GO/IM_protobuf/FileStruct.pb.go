// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: FileStruct.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransferType int32

const (
	TransferType_TRANSFER_TYPE_FILE_INFO     TransferType = 0 // 文件信息
	TransferType_TRANSFER_TYPE_FILE_DATA     TransferType = 1 // 文件数据
	TransferType_TRANSFER_TYPE_FILE_REQUEST  TransferType = 2 // 文件请求
	TransferType_TRANSFER_TYPE_FILE_RESPONSE TransferType = 3 // 文件响应
)

// Enum value maps for TransferType.
var (
	TransferType_name = map[int32]string{
		0: "TRANSFER_TYPE_FILE_INFO",
		1: "TRANSFER_TYPE_FILE_DATA",
		2: "TRANSFER_TYPE_FILE_REQUEST",
		3: "TRANSFER_TYPE_FILE_RESPONSE",
	}
	TransferType_value = map[string]int32{
		"TRANSFER_TYPE_FILE_INFO":     0,
		"TRANSFER_TYPE_FILE_DATA":     1,
		"TRANSFER_TYPE_FILE_REQUEST":  2,
		"TRANSFER_TYPE_FILE_RESPONSE": 3,
	}
)

func (x TransferType) Enum() *TransferType {
	p := new(TransferType)
	*p = x
	return p
}

func (x TransferType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferType) Descriptor() protoreflect.EnumDescriptor {
	return file_FileStruct_proto_enumTypes[0].Descriptor()
}

func (TransferType) Type() protoreflect.EnumType {
	return &file_FileStruct_proto_enumTypes[0]
}

func (x TransferType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferType.Descriptor instead.
func (TransferType) EnumDescriptor() ([]byte, []int) {
	return file_FileStruct_proto_rawDescGZIP(), []int{0}
}

type TransferStatus int32

const (
	TransferStatus_TRANSFER_STATUS_UNSPECIFIED TransferStatus = 0
	TransferStatus_TRANSFER_STATUS_PENDING     TransferStatus = 1 // 等待中
	TransferStatus_TRANSFER_STATUS_SENDING     TransferStatus = 2 // 发送中
	TransferStatus_TRANSFER_STATUS_COMPLETED   TransferStatus = 3 // 已完成
	TransferStatus_TRANSFER_STATUS_FAILED      TransferStatus = 4 // 失败
	TransferStatus_TRANSFER_STATUS_CANCELED    TransferStatus = 5 // 已取消
)

// Enum value maps for TransferStatus.
var (
	TransferStatus_name = map[int32]string{
		0: "TRANSFER_STATUS_UNSPECIFIED",
		1: "TRANSFER_STATUS_PENDING",
		2: "TRANSFER_STATUS_SENDING",
		3: "TRANSFER_STATUS_COMPLETED",
		4: "TRANSFER_STATUS_FAILED",
		5: "TRANSFER_STATUS_CANCELED",
	}
	TransferStatus_value = map[string]int32{
		"TRANSFER_STATUS_UNSPECIFIED": 0,
		"TRANSFER_STATUS_PENDING":     1,
		"TRANSFER_STATUS_SENDING":     2,
		"TRANSFER_STATUS_COMPLETED":   3,
		"TRANSFER_STATUS_FAILED":      4,
		"TRANSFER_STATUS_CANCELED":    5,
	}
)

func (x TransferStatus) Enum() *TransferStatus {
	p := new(TransferStatus)
	*p = x
	return p
}

func (x TransferStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_FileStruct_proto_enumTypes[1].Descriptor()
}

func (TransferStatus) Type() protoreflect.EnumType {
	return &file_FileStruct_proto_enumTypes[1]
}

func (x TransferStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferStatus.Descriptor instead.
func (TransferStatus) EnumDescriptor() ([]byte, []int) {
	return file_FileStruct_proto_rawDescGZIP(), []int{1}
}

type FileStruct struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RequestType:
	//
	//	*FileStruct_Info
	//	*FileStruct_Transfer
	//	*FileStruct_Request
	//	*FileStruct_Respond
	RequestType   isFileStruct_RequestType `protobuf_oneof:"requestType"`
	Id            string                   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileStruct) Reset() {
	*x = FileStruct{}
	mi := &file_FileStruct_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStruct) ProtoMessage() {}

func (x *FileStruct) ProtoReflect() protoreflect.Message {
	mi := &file_FileStruct_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStruct.ProtoReflect.Descriptor instead.
func (*FileStruct) Descriptor() ([]byte, []int) {
	return file_FileStruct_proto_rawDescGZIP(), []int{0}
}

func (x *FileStruct) GetRequestType() isFileStruct_RequestType {
	if x != nil {
		return x.RequestType
	}
	return nil
}

func (x *FileStruct) GetInfo() *FileInfo {
	if x != nil {
		if x, ok := x.RequestType.(*FileStruct_Info); ok {
			return x.Info
		}
	}
	return nil
}

func (x *FileStruct) GetTransfer() *FileTransfer {
	if x != nil {
		if x, ok := x.RequestType.(*FileStruct_Transfer); ok {
			return x.Transfer
		}
	}
	return nil
}

func (x *FileStruct) GetRequest() *FileRequest {
	if x != nil {
		if x, ok := x.RequestType.(*FileStruct_Request); ok {
			return x.Request
		}
	}
	return nil
}

func (x *FileStruct) GetRespond() *FileRespond {
	if x != nil {
		if x, ok := x.RequestType.(*FileStruct_Respond); ok {
			return x.Respond
		}
	}
	return nil
}

func (x *FileStruct) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type isFileStruct_RequestType interface {
	isFileStruct_RequestType()
}

type FileStruct_Info struct {
	Info *FileInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type FileStruct_Transfer struct {
	Transfer *FileTransfer `protobuf:"bytes,2,opt,name=transfer,proto3,oneof"`
}

type FileStruct_Request struct {
	Request *FileRequest `protobuf:"bytes,3,opt,name=request,proto3,oneof"`
}

type FileStruct_Respond struct {
	Respond *FileRespond `protobuf:"bytes,4,opt,name=respond,proto3,oneof"`
}

func (*FileStruct_Info) isFileStruct_RequestType() {}

func (*FileStruct_Transfer) isFileStruct_RequestType() {}

func (*FileStruct_Request) isFileStruct_RequestType() {}

func (*FileStruct_Respond) isFileStruct_RequestType() {}

type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileSize      int64                  `protobuf:"varint,2,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_FileStruct_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_FileStruct_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_FileStruct_proto_rawDescGZIP(), []int{1}
}

func (x *FileInfo) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type FileTransfer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataStart     int64                  `protobuf:"varint,2,opt,name=dataStart,proto3" json:"dataStart,omitempty"`
	DataEnd       int64                  `protobuf:"varint,3,opt,name=dataEnd,proto3" json:"dataEnd,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Status        TransferStatus         `protobuf:"varint,5,opt,name=status,proto3,enum=TransferStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileTransfer) Reset() {
	*x = FileTransfer{}
	mi := &file_FileStruct_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransfer) ProtoMessage() {}

func (x *FileTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_FileStruct_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransfer.ProtoReflect.Descriptor instead.
func (*FileTransfer) Descriptor() ([]byte, []int) {
	return file_FileStruct_proto_rawDescGZIP(), []int{2}
}

func (x *FileTransfer) GetDataStart() int64 {
	if x != nil {
		return x.DataStart
	}
	return 0
}

func (x *FileTransfer) GetDataEnd() int64 {
	if x != nil {
		return x.DataEnd
	}
	return 0
}

func (x *FileTransfer) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileTransfer) GetStatus() TransferStatus {
	if x != nil {
		return x.Status
	}
	return TransferStatus_TRANSFER_STATUS_UNSPECIFIED
}

type FileRespond struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Type          TransferType           `protobuf:"varint,3,opt,name=type,proto3,enum=TransferType" json:"type,omitempty"`
	Status        TransferStatus         `protobuf:"varint,4,opt,name=status,proto3,enum=TransferStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileRespond) Reset() {
	*x = FileRespond{}
	mi := &file_FileStruct_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileRespond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRespond) ProtoMessage() {}

func (x *FileRespond) ProtoReflect() protoreflect.Message {
	mi := &file_FileStruct_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRespond.ProtoReflect.Descriptor instead.
func (*FileRespond) Descriptor() ([]byte, []int) {
	return file_FileStruct_proto_rawDescGZIP(), []int{3}
}

func (x *FileRespond) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *FileRespond) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileRespond) GetType() TransferType {
	if x != nil {
		return x.Type
	}
	return TransferType_TRANSFER_TYPE_FILE_INFO
}

func (x *FileRespond) GetStatus() TransferStatus {
	if x != nil {
		return x.Status
	}
	return TransferStatus_TRANSFER_STATUS_UNSPECIFIED
}

type FileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkStart    int32                  `protobuf:"varint,2,opt,name=chunkStart,proto3" json:"chunkStart,omitempty"`
	ChunkEnd      int32                  `protobuf:"varint,3,opt,name=chunkEnd,proto3" json:"chunkEnd,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Status        TransferStatus         `protobuf:"varint,5,opt,name=status,proto3,enum=TransferStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileRequest) Reset() {
	*x = FileRequest{}
	mi := &file_FileStruct_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRequest) ProtoMessage() {}

func (x *FileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_FileStruct_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRequest.ProtoReflect.Descriptor instead.
func (*FileRequest) Descriptor() ([]byte, []int) {
	return file_FileStruct_proto_rawDescGZIP(), []int{4}
}

func (x *FileRequest) GetChunkStart() int32 {
	if x != nil {
		return x.ChunkStart
	}
	return 0
}

func (x *FileRequest) GetChunkEnd() int32 {
	if x != nil {
		return x.ChunkEnd
	}
	return 0
}

func (x *FileRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileRequest) GetStatus() TransferStatus {
	if x != nil {
		return x.Status
	}
	return TransferStatus_TRANSFER_STATUS_UNSPECIFIED
}

var File_FileStruct_proto protoreflect.FileDescriptor

var file_FileStruct_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xcd, 0x01, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x1f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x26, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x0c, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x83, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x45,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x45,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a,
	0x89, 0x01, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x17, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x1b, 0x0a,
	0x17, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46,
	0x49, 0x4c, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x03, 0x2a, 0xc4, 0x01, 0x0a, 0x0e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x1b, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1b, 0x0a, 0x17, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x46, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44,
	0x10, 0x05, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_FileStruct_proto_rawDescOnce sync.Once
	file_FileStruct_proto_rawDescData []byte
)

func file_FileStruct_proto_rawDescGZIP() []byte {
	file_FileStruct_proto_rawDescOnce.Do(func() {
		file_FileStruct_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_FileStruct_proto_rawDesc), len(file_FileStruct_proto_rawDesc)))
	})
	return file_FileStruct_proto_rawDescData
}

var file_FileStruct_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_FileStruct_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_FileStruct_proto_goTypes = []any{
	(TransferType)(0),    // 0: TransferType
	(TransferStatus)(0),  // 1: TransferStatus
	(*FileStruct)(nil),   // 2: FileStruct
	(*FileInfo)(nil),     // 3: FileInfo
	(*FileTransfer)(nil), // 4: FileTransfer
	(*FileRespond)(nil),  // 5: FileRespond
	(*FileRequest)(nil),  // 6: FileRequest
}
var file_FileStruct_proto_depIdxs = []int32{
	3, // 0: FileStruct.info:type_name -> FileInfo
	4, // 1: FileStruct.transfer:type_name -> FileTransfer
	6, // 2: FileStruct.request:type_name -> FileRequest
	5, // 3: FileStruct.respond:type_name -> FileRespond
	1, // 4: FileTransfer.status:type_name -> TransferStatus
	0, // 5: FileRespond.type:type_name -> TransferType
	1, // 6: FileRespond.status:type_name -> TransferStatus
	1, // 7: FileRequest.status:type_name -> TransferStatus
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_FileStruct_proto_init() }
func file_FileStruct_proto_init() {
	if File_FileStruct_proto != nil {
		return
	}
	file_FileStruct_proto_msgTypes[0].OneofWrappers = []any{
		(*FileStruct_Info)(nil),
		(*FileStruct_Transfer)(nil),
		(*FileStruct_Request)(nil),
		(*FileStruct_Respond)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_FileStruct_proto_rawDesc), len(file_FileStruct_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_FileStruct_proto_goTypes,
		DependencyIndexes: file_FileStruct_proto_depIdxs,
		EnumInfos:         file_FileStruct_proto_enumTypes,
		MessageInfos:      file_FileStruct_proto_msgTypes,
	}.Build()
	File_FileStruct_proto = out.File
	file_FileStruct_proto_goTypes = nil
	file_FileStruct_proto_depIdxs = nil
}
